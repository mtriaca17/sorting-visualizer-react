{"version":3,"sources":["BubbleSortVisualizer.js","SelectionSortVisualizer.js","InsertionSortVisualizer.js","MergeSortVisualizer.js","QuickSortVisualizer.js","RadixSortVisualizer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","createUseStyles","root","height","width","display","flexDirection","justifyContent","alignItems","sortDisplayer","border","gap","bar","backgroundColor","timer","ms","Promise","res","setTimeout","BubbleSortVisualizer","props","useState","steps","setSteps","arrayToSort","arrayBeingSorted","setArrayBeingSorted","useEffect","bubbleSort","arr","a","i","length","noSwaps","j","prevState","classes","className","map","val","index","style","onClick","SelectionSortVisualizer","selectionSort","lowest","console","log","InsertionSortVisualizer","inserstionSort","currentVal","MergeSortVisualizer","QuickSortVisualizer","arrPivot","setArrPivot","quickSort","left","right","pivot","pivotIndex","start","swapIdx","RadixSortVisualizer","radixSort","maxDigitCount","mostDigits","k","digitBuckets","Array","from","digit","getDigit","push","concat","num","Math","floor","abs","pow","maxDigits","max","log10","App","AppTitle","newBtn","padding","cursor","generateArray","random","arrToSort","setArrToSort","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed59fffb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sortDisplayer: {\r\n    width: '90%',\r\n    height: '60%',\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    gap: '1px',\r\n  },\r\n  bar: {\r\n    border: '1px solid black',\r\n    width: '10px',\r\n    backgroundColor: 'dodgerblue',\r\n  },\r\n});\r\n\r\nconst timer = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nfunction BubbleSortVisualizer(props) {\r\n  // const toSrt = [...props.arrayToSort];\r\n  const [steps, setSteps] = useState(0);\r\n  const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n\r\n  useEffect(() => {\r\n    setArrayBeingSorted([...props.arrayToSort]);\r\n  }, [props.arrayToSort]);\r\n\r\n  const bubbleSort = async arr => {\r\n    let noSwaps;\r\n    for (let i = arr.length; i > 0; i--) {\r\n      noSwaps = true;\r\n      for (let j = 0; j < i - 1; j++) {\r\n        if (arr[j] > arr[j + 1]) {\r\n          [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\r\n          setSteps(prevState => prevState + 1);\r\n          setArrayBeingSorted([...arr]);\r\n          noSwaps = false;\r\n          await timer(50);\r\n        }\r\n      }\r\n      if (noSwaps) break;\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    bubbleSort(arrayBeingSorted);\r\n    // console.log('!!!!', arrayToSort);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Bubble Sort</h1>\r\n      <p># of steps: {steps}</p>\r\n      <div className={classes.sortDisplayer}>\r\n        {arrayBeingSorted.map((val, index) => (\r\n          <div className={classes.bar} key={index} style={{ height: `${val}px` }}></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BubbleSortVisualizer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sortDisplayer: {\r\n    width: '90%',\r\n    height: '60%',\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    gap: '1px',\r\n  },\r\n  bar: {\r\n    border: '1px solid black',\r\n    width: '10px',\r\n    backgroundColor: 'dodgerblue',\r\n  },\r\n});\r\n\r\nconst timer = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nfunction SelectionSortVisualizer(props) {\r\n  const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n\r\n  const [steps, setSteps] = useState(0);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setArrayBeingSorted([...props.arrayToSort]);\r\n  }, [props.arrayToSort]);\r\n\r\n  const selectionSort = async arr => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let lowest = i;\r\n      for (let j = i + 1; j < arr.length; j++) {\r\n        if (arr[j] < arr[lowest]) {\r\n          lowest = j;\r\n        }\r\n      }\r\n      if (i !== lowest) {\r\n        await timer(50);\r\n        [arr[i], arr[lowest]] = [arr[lowest], arr[i]];\r\n        setSteps(prevState => prevState + 1);\r\n        setArrayBeingSorted([...arr]);\r\n      }\r\n    }\r\n    console.log(arr);\r\n    return arr;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    selectionSort(arrayBeingSorted);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Selection Sort</h1>\r\n      <p># of steps: {steps}</p>\r\n      <div className={classes.sortDisplayer}>\r\n        {arrayBeingSorted.map((val, index) => (\r\n          <div className={classes.bar} key={index} style={{ height: `${val}px` }}></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionSortVisualizer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sortDisplayer: {\r\n    width: '90%',\r\n    height: '60%',\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    gap: '1px',\r\n  },\r\n  bar: {\r\n    border: '1px solid black',\r\n    width: '10px',\r\n    backgroundColor: 'dodgerblue',\r\n  },\r\n});\r\n\r\nconst timer = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nfunction InsertionSortVisualizer(props) {\r\n  const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n  const [steps, setSteps] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setArrayBeingSorted([...props.arrayToSort]);\r\n  }, [props.arrayToSort]);\r\n\r\n  const inserstionSort = async arr => {\r\n    for (let i = 1; i < arr.length; i++) {\r\n      let currentVal = arr[i];\r\n      for (let j = i - 1; j >= 0 && arr[j] > currentVal; j--) {\r\n        arr[j + 1] = arr[j];\r\n        arr[j] = currentVal;\r\n        setSteps(prevState => prevState + 1);\r\n        setArrayBeingSorted([...arr]);\r\n        await timer(50);\r\n        // console.log(arr);\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    inserstionSort(arrayBeingSorted);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Insertion Sort</h1>\r\n      <p># of steps: {steps}</p>\r\n      <div className={classes.sortDisplayer}>\r\n        {arrayBeingSorted.map((val, index) => (\r\n          <div className={classes.bar} key={index} style={{ height: `${val}px` }}></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InsertionSortVisualizer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sortDisplayer: {\r\n    width: '90%',\r\n    height: '60%',\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    gap: '1px',\r\n  },\r\n  bar: {\r\n    border: '1px solid black',\r\n    width: '10px',\r\n    backgroundColor: 'dodgerblue',\r\n  },\r\n});\r\n\r\nconst timer = ms => new Promise(res => setTimeout(res, ms));\r\nconst exampleArray = [5, 12, 51, 2, 3, 4, 56, 13];\r\nfunction MergeSortVisualizer(props) {\r\n  // const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n  const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n  const [mergeSorted, setMergeSorted] = useState([...arrayBeingSorted]);\r\n  const [steps, setSteps] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setArrayBeingSorted([...props.arrayToSort]);\r\n  }, [props.arrayToSort]);\r\n\r\n  useEffect(() => {\r\n    setMergeSorted(exampleArray);\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const mergeSort = arr => {\r\n    // console.log(arr);\r\n    let sortedArr = [];\r\n    if (arr.length <= 1) return arr;\r\n\r\n    let mid = Math.floor(arr.length / 2);\r\n    let left = mergeSort(arr.slice(0, mid));\r\n    let right = mergeSort(arr.slice(mid));\r\n\r\n    setMergeSorted([...merge(left, right)]);\r\n    sortedArr = [...merge(left, right)];\r\n    return sortedArr;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(mergeSort(exampleArray));\r\n  };\r\n\r\n  const merge = (arr1, arr2) => {\r\n    const mergedArray = [];\r\n    let i = 0;\r\n    let j = 0;\r\n    while (i < arr1.length && j < arr2.length) {\r\n      if (arr2[j] > arr1[i]) {\r\n        mergedArray.push(arr1[i]);\r\n        i++;\r\n      } else {\r\n        mergedArray.push(arr2[j]);\r\n        j++;\r\n      }\r\n    }\r\n\r\n    while (i < arr1.length) {\r\n      mergedArray.push(arr1[i]);\r\n      i++;\r\n    }\r\n    while (j < arr2.length) {\r\n      mergedArray.push(arr2[j]);\r\n      j++;\r\n    }\r\n\r\n    return mergedArray;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Merge Sort</h1>\r\n      <p># of steps: {steps}</p>\r\n      <div className={classes.sortDisplayer}>\r\n        {mergeSorted.map((val, index) => (\r\n          <div className={classes.bar} key={index} style={{ height: `${val}px` }}></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MergeSortVisualizer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sortDisplayer: {\r\n    width: '90%',\r\n    height: '60%',\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    gap: '1px',\r\n  },\r\n  bar: {\r\n    border: '1px solid black',\r\n    width: '10px',\r\n    backgroundColor: 'dodgerblue',\r\n  },\r\n});\r\n\r\nconst timer = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nfunction QuickSortVisualizer(props) {\r\n  // const toSrt = [...props.arrayToSort];\r\n  const [steps, setSteps] = useState(0);\r\n  const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n  const [arrPivot, setArrPivot] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setArrayBeingSorted([...props.arrayToSort]);\r\n    setArrPivot(0);\r\n  }, [props.arrayToSort]);\r\n\r\n  const quickSort = async (arr, left = 0, right = arr.length - 1) => {\r\n    if (left < right) {\r\n      let pivotIndex = await pivot(arr, left, right);\r\n      //leftside\r\n      quickSort(arr, left, pivotIndex - 1);\r\n      //rightside\r\n      quickSort(arr, pivotIndex + 1, right);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  async function pivot(arr, start = 0, end = arr.length + 1) {\r\n    let pivot = arr[start];\r\n    setArrPivot(start);\r\n\r\n    let swapIdx = start;\r\n    for (let i = start + 1; i < arr.length; i++) {\r\n      if (pivot > arr[i]) {\r\n        swapIdx++;\r\n        [arr[swapIdx], arr[i]] = [arr[i], arr[swapIdx]];\r\n      }\r\n    }\r\n    [arr[start], arr[swapIdx]] = [arr[swapIdx], arr[start]];\r\n    await timer(50);\r\n    console.log(arr);\r\n    setArrayBeingSorted([...arr]);\r\n    setSteps(prevState => (prevState += 1));\r\n\r\n    return swapIdx;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    console.log(arrayBeingSorted);\r\n    quickSort(arrayBeingSorted);\r\n    console.log(arrayBeingSorted);\r\n    // console.log('!!!!', arrayToSort);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Quick Sort</h1>\r\n      <p># of steps: {steps}</p>\r\n      <div className={classes.sortDisplayer}>\r\n        {arrayBeingSorted.map((val, index) => (\r\n          <div\r\n            className={classes.bar}\r\n            key={index}\r\n            style={{\r\n              height: `${val}px`,\r\n              backgroundColor: index === arrPivot ? 'red' : 'dodgerblue',\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuickSortVisualizer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sortDisplayer: {\r\n    width: '90%',\r\n    height: '60%',\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    gap: '1px',\r\n  },\r\n  bar: {\r\n    border: '1px solid black',\r\n    width: '10px',\r\n    backgroundColor: 'dodgerblue',\r\n  },\r\n});\r\n\r\nconst timer = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nfunction RadixSortVisualizer(props) {\r\n  const [arrayBeingSorted, setArrayBeingSorted] = useState([...props.arrayToSort]);\r\n  // const [steps, setSteps] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setArrayBeingSorted([...props.arrayToSort]);\r\n  }, [props.arrayToSort]);\r\n\r\n  const radixSort = async arr => {\r\n    console.log('start', arr);\r\n    let maxDigitCount = mostDigits(arr);\r\n    for (let k = 0; k < maxDigitCount; k++) {\r\n      let digitBuckets = Array.from({ length: 10 }, () => []);\r\n      for (let i = 0; i < arr.length; i++) {\r\n        //digitBuckets[getDigit(arr[i], k)].push(arr[i])\r\n        let digit = getDigit(arr[i], k);\r\n        digitBuckets[digit].push(arr[i]);\r\n      }\r\n      arr = [].concat(...digitBuckets);\r\n      console.log(arr);\r\n      setArrayBeingSorted([...arr]);\r\n      await timer(2000);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const getDigit = (num, i) => {\r\n    return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;\r\n  };\r\n\r\n  const digitCount = num => {\r\n    if (num === 0) return 1;\r\n    return Math.floor(Math.log10(Math.abs(num))) + 1;\r\n  };\r\n\r\n  const mostDigits = arr => {\r\n    let maxDigits = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      maxDigits = Math.max(maxDigits, digitCount(arr[i]));\r\n    }\r\n    return maxDigits;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    radixSort(arrayBeingSorted);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Radix Sort</h1>\r\n      {/* <p># of steps: {steps}</p> */}\r\n      <div className={classes.sortDisplayer}>\r\n        {arrayBeingSorted.map((val, index) => (\r\n          <div className={classes.bar} key={index} style={{ height: `${val}px` }}></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Sort</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadixSortVisualizer;\r\n","import React, { useState, useEffect } from 'react';\nimport BubbleSortVisualizer from './BubbleSortVisualizer';\nimport SelectionSortVisualizer from './SelectionSortVisualizer';\nimport InsertionSortVisualizer from './InsertionSortVisualizer';\nimport MergeSortVisualizer from './MergeSortVisualizer';\nimport QuickSortVisualizer from './QuickSortVisualizer';\nimport RadixSortVisualizer from './RadixSortVisualizer';\nimport { createUseStyles } from 'react-jss';\n\n// import './App.css';\nconst useStyles = createUseStyles({\n  App: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  AppTitle: {},\n  newBtn: {\n    padding: '1rem',\n    cursor: 'pointer',\n  },\n});\n\nconst generateArray = (length = 100) => {\n  return Array.from({ length: length }, () => Math.floor(Math.random() * 100) + 1);\n};\n\n// const exampleArray = [4, 2, 1, 5, 3, 9, 2, 3, 12, 5, 6, 9, 2, 4, 7, 8, 12, 5, 4, 12, 13];\nfunction App() {\n  const [arrToSort, setArrToSort] = useState([]);\n\n  useEffect(() => {\n    console.log('h1');\n    setArrToSort([...generateArray()]);\n  }, []);\n\n  const onClick = () => {\n    setArrToSort(generateArray());\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.App}>\n      <h1 className={classes.AppTitle}>Sorting visualizer</h1>\n      <button className={classes.newBtn} onClick={onClick}>\n        Generate New Array\n      </button>\n      <BubbleSortVisualizer arrayToSort={arrToSort} />\n      <SelectionSortVisualizer arrayToSort={arrToSort} />\n      <InsertionSortVisualizer arrayToSort={arrToSort} />\n      {/* <MergeSortVisualizer arrayToSort={arrToSort} /> */}\n      <QuickSortVisualizer arrayToSort={arrToSort} />\n      <RadixSortVisualizer arrayToSort={arrToSort} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}